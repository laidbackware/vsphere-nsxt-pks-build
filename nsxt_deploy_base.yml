---
- hosts: 127.0.0.1
  connection: local
  become: yes
  vars_files:
    - nsxt_answerfile_base.yml
  tasks:
    - name: deploy NSX Manager OVA
      nsxt_deploy_ova:
        ovftool_path: "/usr/bin"
        #folder: ''
        datacenter: "{{manager_datacenter}}"
        datastore: "{{manager_datastore}}"
        portgroup: "{{manager_portgroup}}"
        cluster: "{{manager_cluster}}"
        vmname: "{{manager_vmname}}"
        hostname: "{{manager_hostname}}"
        dns_server: "{{manager_dns_server}}"
        dns_domain: "{{manager_dns_domain}}"
        ntp_server: "{{manager_ntp_server}}"
        gateway: "{{manager_gateway}}"
        ip_address: "{{manager_ip_address}}"
        netmask: "{{manager_netmask}}"
        admin_password: "{{password}}"
        cli_password: "{{manager_cli_password}}"
        path_to_ova: "{{manager_path_to_ova}}"
        ova_file: "{{manager_ova_file}}"
        vcenter: "{{manager_vcenter}}"
        vcenter_user: "{{manager_vcenter_user}}"
        vcenter_passwd: "{{manager_vcenter_passwd}}"
        deployment_size: "{{manager_deployment_size}}"
        role: "nsx-manager nsx-controller"
        allow_ssh_root_login: True
        ssh_enabled: True
      register: result_manager

    - name: Check API is online
      uri:
        url: "https://{{ hostname }}/api/v1/license"
        method: GET
        user: "{{ username }}"
        password: "{{ password }}"
        #body: "{{ lookup('file','issue.json') }}"
        force_basic_auth: yes
        status_code: 200
        body_format: json
        timeout: 5
        validate_certs: False
      register: api_response
      until: api_response.status == 200
      retries: 120
      delay: 10
      changed_when: false 
    
    - name: Wait 10 seconds for the API to settle
      pause: seconds=10
      when: result_manager.changed
 
    - name: Create ip pool
      nsxt_ip_pools:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "{{item.display_name}}"
        subnets: "{{item.subnets}}"
        state: present
      with_items:
        - "{{ip_pools}}"    

    - name: Create transport zone
      nsxt_transport_zones:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        resource_type: "TransportZone"
        display_name: "{{item.display_name}}"
        description: "{{item.description}}"
        transport_type: "{{item.transport_type}}"
        host_switch_name: "{{item.host_switch_name}}"
        state: "present"
      register: result
      with_items:
        - "{{transportzones}}"
    - debug: var=result.id

    - name: Create uplink profile
      nsxt_uplink_profiles:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        resource_type: UplinkHostSwitchProfile
        display_name: "{{item.display_name}}"
        mtu: 1600
        teaming: "{{item.teaming}}"
        transport_vlan: "{{item.transport_vlan}}"
        state: "present"
      with_items:
        - "{{uplink_profiles}}"    

    - name: Deploy compute manager
      nsxt_fabric_compute_managers:
          hostname: "{{hostname}}"
          username: "{{username}}"
          password: "{{password}}"
          validate_certs: False
          display_name: "{{ item.display_name }}"
          server: "{{ item.server }}"
          origin_type: "{{ item.origin_type }}"
          credential:
            credential_type: UsernamePasswordLoginCredential
            username: "{{ item.username }}"
            password: "{{ item.password }}"
          state: present
      register: compute_manager
      with_items:
        - "{{compute_managers}}"

    - name: Create transport node profile
      nsxt_transport_node_profiles:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        resource_type: TransportNodeProfile
        display_name: "{{item.display_name}}"
        description: "{{item.description}}"
        host_switch_spec:
          resource_type: StandardHostSwitchSpec
          host_switches: "{{item.host_switches}}"
        transport_zone_endpoints: "{{item.transport_zone_endpoints}}"
        state: present
      with_items:
        - "{{transport_node_profiles}}"

    - name: Attach Transport node profile to cluster
      nsxt_transport_node_collections:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "{{item.display_name}}"
        resource_type: "TransportNodeCollection"
        description: "{{item.description}}"
        compute_manager_name: "{{item.compute_manager_name}}"
        cluster_name: "{{item.cluster_name}}"
        transport_node_profile_name: "{{item.transport_node_profile_name}}"
        state: present      
      with_items:
        - "{{cluster_attach}}"

    # 3 tasks below only supports creating a single edge.
    - name: Add Edge VM
      nsxt_fabric_nodes:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        resource_type: "EdgeNode"
        display_name: "{{item.edge_hostname}}"  # TODO not assinging as name in Manager
        ip_addresses:
        deployment_config:
          form_factor: "{{item.edge_size}}"
          node_user_settings:
            cli_password: "{{password}}"
            root_password: "{{password}}"
          vm_deployment_config:
            allow_ssh_root_login: True
            enable_ssh: True
            placement_type: VsphereDeploymentConfig
            vc_name: "vCenter"
            data_network_ids:
            - "{{network_management_id}}" # Fix
            - "{{network_management_id}}" # Fix
            - "{{network_tep_id}}" # Fix
            management_network_id: "{{network_management_id}}" # Fix
            hostname: "{{item.edge_hostname}}"
            compute_id: "{{cluster_id}}" # Fix
            storage_id: "{{datastore_id}}" # Fix
            default_gateway_addresses:
            - "{{item.edge_default_gateway_addresses}}"
            management_port_subnets:
            - ip_addresses:
              - "{{item.edge_ip_addresses}}"
              prefix_length: "{{item.edge_prefix_length}}"
        state: present
      
      register: result_edge
      with_items: "{{edges}}"     
    #   async: 7200
    #   poll: 0

    # - name: Check Edge deployments
    #   async_status:
    #     jid: "{{item.ansible_job_id}}"
    #   register: job_result
    #   until: job_result.finished
    #   with_items: "{{result_edge.results}}"
    #   retries: 120
    #   delay: 15
    
    - debug: msg="{{result_edge}}"

    - name: Create transport node
      nsxt_transport_nodes:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "{{result_edge.results.0.id}}"
        node_id: "{{result_edge.results.0.id}}" # HACK. NSX-T 2.4.0 has bug which ignores display name in POST calls.
        host_switch_spec: "{{item.host_switch_spec}}" # HACK. NSX-T 2.4.0 has bug which ignores display name in POST calls.
        transport_zone_endpoints: "{{item.transport_zone_endpoints}}"
        resource_type: 'TransportNode'
        # node_deployment_info:
        #   resource_type: "EdgeNode"
        #   id: "{{result_edge.id}}"
        #   ip_addresses:
        #   - "{{edge_ip_addresses}}"
        #   external_id: "{{result_edge.id}}"
        #   # deployment_config:
          #   form_factor: "{{edge_size}}"  
          #   node_user_settings:
          #     cli_password: "{{password}}"
          #     root_password: "{{password}}"
          #   vm_deployment_config:
          #     allow_ssh_root_login: True
          #     enable_ssh: True
          #     placement_type: VsphereDeploymentConfig
          #     vc_name: "vCenter"
          #     data_network_ids:
          #     - "{{network_management_id}}" # Fix
          #     - "{{network_management_id}}" # Fix
          #     - "{{network_tep_id}}" # Fix
          #     management_network_id: "{{network_management_id}}" # Fix
          #     hostname: "{{edge_hostname}}"
          #     compute_id: "{{cluster_id}}" # Fix
          #     storage_id: "{{datastore_id}}" # Fix
          #     default_gateway_addresses:
          #     - "{{edge_default_gateway_addresses}}"
          #     management_port_subnets:
          #     - ip_addresses:
          #       - "{{edge_ip_addresses}}"
          #       prefix_length: "{{edge_prefix_length}}"
        state: present
      with_items:
        - "{{edge_transport_nodes}}"

    - name: Add edge cluster
      nsxt_edge_clusters:
        hostname: "{{hostname}}"
        username: "{{username}}"
        password: "{{password}}"
        validate_certs: False
        display_name: "{{edge_cluster_name}}"
        cluster_profile_bindings:
        - profile_id: 91bcaa06-47a1-11e4-8316-17ffc770799b
          resource_type: EdgeHighAvailabilityProfile
        members:
        - transport_node_name: "{{result_edge.results.0.id}}" # Hack because Edge name not set correctly.
        state: present

 ##TODO
 # vCenter names for Edge creation versus moid names. Current order is OK with fixed deployments. Issue opened on source repo
 # Fix why Edge creation gives a UID no the actual name

 ##Improvement
 # Handle error if edge creation failed and the edge still exists. Probably module update.
 # Invesitigate collapsing edge creation and transport node into a single section. This shold work.
 # Check why IP pool updates even if not changed. After ip claim this will likely error.
